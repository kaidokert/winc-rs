[package]
name = "wincwifi"
version = "0.2.2"
edition = "2021"
license = "Apache-2.0"
authors = ["kaidokert <kaidokert@gmail.com>"]
documentation = "https://docs.rs/wincwifi"
description = """
WINC1500 Wifi chip embedded driver
"""
readme = "../README.md"
repository = "https://github.com/kaidokert/winc-rs"
homepage = "https://github.com/kaidokert/winc-rs"
keywords = [
    "embedded",
    "no-std",
    "wifi",
    "winc1500",
    "atwinc1500"
]
categories = [
    "embedded",
    "hardware-support",
    "no-std",
]

[dependencies]
log = {version="0.4.17", default-features = false, optional=true }

# CRC calcs for the over-the-wire firmware
crc-any = { version = "2.4.3", default-features = false }

# Embedded NAL
embedded-nal = "0.9.0"

# TODO: Sparsely used, maybe drop
arrayvec =  { version = "0.7.2", default-features = false }

# For fixed-size strings - gradually replacing arrayvec
heapless = { version = "0.8.0", default-features = false }

# TODO: Remove maybe ?
void = { version =  "1", default-features = false }

defmt = { version = "0.3.2", default-features = false, optional=true }
embedded-nal-async = { version = "0.8.0", optional = true }

embedded-io-async = { version = "0.6.0", optional = true }

# For PRNG
rand_core = { version = "0.9", default-features = false, optional = true }

[dev-dependencies]
macro_rules_attribute = "0.2"
smol-macros = "0.1"
test-log = "0.2.11"

[features]
log = ["dep:log"]
std = ["log"]
defmt = ["dep:defmt"]
default = ["std","async"]
embedded-nal-async = ["dep:embedded-nal-async"]
async = ["dep:embedded-nal-async", "dep:embedded-io-async"]
rng = ["dep:rand_core"]
large_rng = [] # This will allocate a 1.6KB buffer for the PRNG upon initialization.
wep = [] # This will enable weak WEP network security.
irq = [] # Use the IRQ pin on the module.
experimental-ota = [] # To enable OTA.
flash-rw = [] # Enable SPI Flash Read/Write access.

# Todo: add feature flags to save binary space
# - TCP
# - UDP
# - ssl, and disable all SSL code by default
# - firmware update, disable all firmware code by default
